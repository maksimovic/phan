src/007_use.php:3 PhanCompatibleUseVoidPHP70 Using '\A\void' as void will be a syntax error in PHP 7.1 (void becomes the absense of a return type).
src/007_use.php:3 PhanUnreferencedUseNormal Possibly zero references to use statement for classlike/namespace void (\A\void)
src/007_use.php:4 PhanCompatibleUseIterablePHP71 Using '\NS\iterable' as iterable will be a syntax error in PHP 7.2 (iterable becomes a native type with subtypes Array and Iterator).
src/007_use.php:4 PhanUnreferencedUseNormal Possibly zero references to use statement for classlike/namespace iterable (\NS\iterable)
src/007_use.php:5 PhanCompatibleUseObjectPHP71 Using '\My\Framework\object' as object will be a syntax error in PHP 7.2 (object becomes a native type that accepts any class instance).
src/007_use.php:5 PhanUnreferencedUseNormal Possibly zero references to use statement for classlike/namespace object (\My\Framework\object)
src/007_use.php:7 PhanCompatibleIterableTypePHP70 Return type 'iterable' means a Traversable/array value starting in PHP 7.1. In PHP 7.0, iterable refers to a class/interface with the name 'iterable'
src/007_use.php:7 PhanCompatibleNullableTypePHP71 Type 'object' refers to any object starting in PHP 7.2. In PHP 7.1 and earlier, it refers to a class/interface with the name 'object'
src/007_use.php:7 PhanCompatibleVoidTypePHP70 Return type 'void' means the absense of a return value starting in PHP 7.1. In PHP 7.0, void refers to a class/interface with the name 'void'
src/007_use.php:11 PhanTypeMismatchArgument Argument 1 (o) is null but \example() takes object defined at src/007_use.php:7
src/007_use.php:11 PhanTypeMismatchArgument Argument 2 (i) is null but \example() takes iterable defined at src/007_use.php:7
